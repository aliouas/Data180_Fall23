library(tidyverse)
countries <- read.csv("countries.csv")
library(tidyverse)
countries <- read.csv("countries.csv")
setwd("C:/Users/souha/Documents/GitHub/Data180_Fall23")
library(tidyverse)
countries <- read.csv("countries.csv")
setwd("C:/Users/souha/Documents/GitHub/Data180_Fall23/exams")
library(tidyverse)
countries <- read.csv("countries.csv")
library(tidyverse)
countries <- read.csv("countries")
setwd("C:/Users/souha/Documents/GitHub/Data180_Fall23/exams/take-home final")
library(tidyverse)
countries <- read.csv("countries")
setwd("C:/Users/souha/Documents/GitHub/Data180_Fall23/exams/")
library(tidyverse)
countries <- read.csv("countries")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
library(tidyverse)
countries <- read.csv("C:/Users/souha/Documents/GitHub/Data180_Fall23/exams/take-home final/countries.csv")
countries <- countries %>% drop_na(gdp,pop,life) # let's drop rows with missing obs
View(countries)
countries <- countries %>% filter(pop=pop>1)
countries <- countries %>% filter(pop==pop>1)
countries <- countries %>% filter(pop>1)
countries <- countries %>% filter(pop>1)
countries <- countries %>% mutate(gdp_per_capita = gdp / pop)
hc <- hclust(dist(countries[, c("gdp_per_capita", "life")], method = "manhattan"), method = "complete")
clusters <- cutree(hc, k = 3)
countries <- cbind(countries, cluster = clusters)
plot(countries$life~countries$gdp,xlim=,ylim=,)
countries <- countries %>% filter(pop>1)
countries <- countries %>% mutate(gdp_per_capita = gdp / pop)
hc <- hclust(dist(countries[, c("gdp_per_capita", "life")], method = "manhattan"), method = "complete")
clusters <- cutree(hc, k = 3)
countries <- cbind(countries, cluster = clusters)
plot(countries$life~countries$gdp,xlim=c(0,5),ylim=c(30,100),cex.axis=1.3,cex=1.4,cex.lab=1.2,col=k_3)
countries <- countries %>% filter(pop>1)
library(tidyverse)
countries <- read.csv("C:/Users/souha/Documents/GitHub/Data180_Fall23/exams/take-home final/countries.csv")
countries <- countries %>% drop_na(gdp,pop,life) # let's drop rows with missing obs
countries <- countries %>% filter(pop>1)
countries <- countries %>% mutate(gdp_per_capita = gdp / pop)
hc <- hclust(dist(countries[, c("gdp_per_capita", "life")], method = "manhattan"), method = "complete")
clusters <- cutree(hc, k = 3)
countries <- cbind(countries, cluster = clusters)
plot(countries$life~countries$gdp,xlim=c(0,5),ylim=c(30,100),cex.axis=1.3,cex=1.4,cex.lab=1.2,col=as.factor(clusters))
countries <- countries %>% filter(pop>1)
countries <- countries %>% mutate(gdp_per_capita = gdp / pop)
hc <- hclust(dist(countries[, c("gdp_per_capita", "life")], method = "manhattan"), method = "complete")
clusters <- cutree(hc, k = 3)
countries <- cbind(countries, cluster = clusters)
plot(countries$life~countries$gdp,xlim=c(0,10),ylim=c(30,100),cex.axis=1.3,cex=1.4,cex.lab=1.2,col=as.factor(clusters))
countries <- countries %>% filter(pop>1)
library(tidyverse)
countries <- read.csv("C:/Users/souha/Documents/GitHub/Data180_Fall23/exams/take-home final/countries.csv")
countries <- countries %>% drop_na(gdp,pop,life) # let's drop rows with missing obs
countries <- countries %>% filter(pop>1)
countries <- countries %>% mutate(gdp_per_capita = gdp / pop)
hc <- hclust(dist(countries[, c("gdp_per_capita", "life")], method = "manhattan"), method = "complete")
clusters <- cutree(hc, k = 3)
countries <- cbind(countries, cluster = clusters)
plot(countries$life~countries$gdp,cex.axis=1.3,cex=1.4,cex.lab=1.2,col=as.factor(clusters))
countries <- countries %>% filter(pop>1)
countries <- countries %>% mutate(gdp_per_capita = gdp / pop)
hc <- hclust(dist(countries[, c("gdp_per_capita", "life")], method = "manhattan"), method = "complete")
clusters <- cutree(hc, k = 3)
countries <- cbind(countries, cluster = clusters)
plot(countries$life~countries$gdp,cex.axis=1.3,cex=1.4,cex.lab=1.2,pch=15,col=as.factor(clusters))
countries <- countries %>% filter(pop>1)
library(tidyverse)
countries <- read.csv("C:/Users/souha/Documents/GitHub/Data180_Fall23/exams/take-home final/countries.csv")
countries <- countries %>% drop_na(gdp,pop,life) # let's drop rows with missing obs
countries <- countries %>% filter(pop>1)
countries <- countries %>% mutate(gdp_per_capita = gdp / pop)
hc <- hclust(dist(countries[, c("gdp_per_capita", "life")], method = "manhattan"), method = "complete")
clusters <- cutree(hc, k = 3)
countries <- cbind(countries, cluster = clusters)
plot(countries$gdp_per_capita, countries$life, cex.axis = 1.3, cex = 1.4, cex.lab = 1.2, pch = 15, col = clusters,
xlab = "GDP per Capita", ylab = "Life Expectancy", main = "Scatterplot of GDP per Capita vs. Life Expectancy")
countries <- countries %>% filter(pop>1)
countries <- countries %>% mutate(gdp_per_capita = gdp / pop)
hc <- hclust(dist(countries[, c("gdp_per_capita", "life")], method = "manhattan"), method = "complete")
clusters <- cutree(hc, k = 3)
countries <- cbind(countries, cluster = clusters)
plot(countries$gdp_per_capita, countries$life, cex.axis = 1.3, cex = 1.4, cex.lab = 1.2, pch = 15+clusters, col = clusters,
xlab = "GDP per Capita", ylab = "Life Expectancy", main = "Scatterplot of GDP per Capita vs. Life Expectancy")
countries <- countries %>% filter(pop>1)
library(tidyverse)
countries <- read.csv("C:/Users/souha/Documents/GitHub/Data180_Fall23/exams/take-home final/countries.csv")
countries <- countries %>% drop_na(gdp,pop,life) # let's drop rows with missing obs
countries <- countries %>% filter(pop>1)
countries <- countries %>% mutate(gdp_per_capita = gdp / pop)
hc <- hclust(dist(countries[, c("gdp_per_capita", "life")], method = "manhattan"), method = "complete")
clusters <- cutree(hc, k = 3)
countries <- cbind(countries, cluster = clusters)
plot(countries$gdp_per_capita, countries$life, cex.axis = 1.3, cex = 1.4, cex.lab = 1.2, pch = 15+clusters, col = clusters,
xlab = "GDP per Capita", ylab = "Life Expectancy", main = "Scatterplot of GDP per Capita vs. Life Expectancy")
cluster_counts <- table(clusters)
cluster_counts
afghanistan_data <- countries %>% filter(code == "AFG")
cluster_1960 <- afghanistan_data %>% filter(year == 1960) %>% select(cluster)
improvement <- afghanistan_data %>%
group_by(year) %>%
summarize(cluster = first(cluster)) %>%
mutate(improvement = ifelse(cluster != lag(cluster), "Yes", "No"))
improvement_over_years %>%
filter(improvement == "Yes") %>%
select(year, improvement)
afghanistan_data <- countries %>% filter(code == "AFG")
cluster_1960 <- afghanistan_data %>% filter(year == 1960) %>% select(cluster)
improvements <- afghanistan_data %>%
group_by(year) %>%
summarize(cluster = first(cluster)) %>%
mutate(improvement = ifelse(cluster != lag(cluster), "Yes", "No"))
improvements %>%
filter(improvement == "Yes") %>%
select(year, improvement)
View(afghanistan_data)
afghanistan_data <- countries %>% filter(code == "AFG")
afghanistan_data
cluster_1960 <- afghanistan_data %>% filter(year == 1960) %>% select(cluster)
improvements <- afghanistan_data %>%
group_by(year) %>%
summarize(cluster = first(cluster)) %>%
mutate(improvement = ifelse(cluster != lag(cluster), "Yes", "No"))
improvements %>%
filter(improvement == "Yes") %>%
select(year, improvement)
afghanistan_data <- countries %>% filter(code == "AFG")
afghanistan_data
afghanistan_data %>% filter(year == 1960) %>% select(cluster)
improvements <- afghanistan_data %>%
group_by(year) %>%
summarize(cluster = first(cluster)) %>%
mutate(improvement = ifelse(cluster != lag(cluster), "Yes", "No"))
improvements %>%
filter(improvement == "Yes") %>%
select(year, improvement)
View(improvements)
afghanistan_data <- countries %>% filter(code == "AFG")
afghanistan_data
afghanistan_data %>% filter(year == 1960) %>% select(cluster)
afghanistan_data %>%
group_by(year) %>%
summarize(cluster = first(cluster)) %>%
mutate(improvement = ifelse(cluster != lag(cluster), "Yes", "No"))
improvements %>%
filter(improvement == "Yes") %>%
select(year, improvement)
afghanistan_data <- countries %>% filter(code == "AFG")
afghanistan_data
afghanistan_data %>% filter(year == 1960) %>% select(cluster)
afghanistan_data %>%
group_by(year) %>%
summarize(cluster = first(cluster))
afghanistan_data <- countries %>% filter(code == "AFG")
afghanistan_data
afghanistan_data %>% filter(year == 1960) %>% select(cluster)
afghanistan_data %>%
group_by(year) %>%
summarize(cluster)
afghanistan_data <- countries %>% filter(code == "AFG")
afghanistan_data
afghanistan_data %>% filter(year == 1960) %>% select(cluster)
improvement <- afghanistan_data %>%
group_by(year) %>%
summarize(cluster)
improvement
afghanistan_data <- countries %>% filter(code == "AFG")
afghanistan_data
afghanistan_data %>% filter(year == 1960) %>% select(cluster)
improvement <- afghanistan_data %>%
group_by(year) %>%
summarize(cluster)
improvement
View(improvement)
usa_data <- countries %>% filter(code == "USA")
usa_data
usa_data %>% filter(year == 1960) %>% select(cluster)
View(afghanistan_data)
View(countries)
usa_data <- countries %>% filter(code == "USA")
usa_data
usa_data %>% filter(year == 1960) %>% select(cluster)
usa_norway_data <- countries_filtered %>% filter(code %in% c("USA", "NOR"))
usa_norway_data <- countries %>% filter(code %in% c("USA", "NOR"))
cluster_usa_norway <- usa_norway_data %>% filter(year == 1960) %>% select(code, cluster)
usa_norway_data <- countries %>% filter(code %in% c("USA", "NOR"))
usa_norway_data %>% filter(year == 1960) %>% select(code, cluster)
usa_norway_data <- countries %>% filter(code %in% c("USA", "NOR"))
usa_norway_data %>% filter(cluster == 1) %>% select(code, cluster, year)
countries <- countries %>% filter(!is.na(pop))
countries <- countries %>% filter(year == 1990)
# Perform hierarchical clustering for 1990
hc_1990 <- hclust(dist(countries[, c("gdp_per_capita", "life")], method = "manhattan"), method = "complete")
clusters <- cutree(hc_1990, k = 3)
countries <- cbind(countries, cluster = clusters)
countries %>% filter(code == "USA") %>% select(cluster)
countries <- countries %>% filter(!is.na(pop))
usa_norway_data <- countries %>% filter(code %in% c("USA", "NOR"))
# Custom options for knitting, you can keep this as it is.
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
error = FALSE,
fig.align = "center",
fig.width = 4,
fig.height = 4,
cache = FALSE
)
# turn off scientific notation
options(scipen=5)
library(tidyverse)
countries <- read.csv("C:/Users/souha/Documents/GitHub/Data180_Fall23/exams/take-home final/countries.csv")
countries <- countries %>% drop_na(gdp,pop,life) # let's drop rows with missing obs
countries <- countries %>% filter(pop>1)
countries <- countries %>% mutate(gdp_per_capita = gdp / pop)
hc <- hclust(dist(countries[, c("gdp_per_capita", "life")], method = "manhattan"), method = "complete")
clusters <- cutree(hc, k = 3)
countries <- cbind(countries, cluster = clusters)
plot(countries$gdp_per_capita, countries$life, cex.axis = 1.3, cex = 1.4, cex.lab = 1.2, pch = 15+clusters, col = clusters,
xlab = "GDP per Capita", ylab = "Life Expectancy", main = "Scatterplot of GDP per Capita vs. Life Expectancy")
cluster_counts <- table(clusters)
cluster_counts
afghanistan_data <- countries %>% filter(code == "AFG")
afghanistan_data
afghanistan_data %>% filter(year == 1960) %>% select(cluster)
improvement <- afghanistan_data %>%
group_by(year) %>%
summarize(cluster)
improvement
usa_data <- countries %>% filter(code == "USA")
usa_data
usa_data %>% filter(year == 1960) %>% select(cluster)
usa_norway_data <- countries %>% filter(code %in% c("USA", "NOR"))
usa_norway_data %>% filter(cluster == 1) %>% select(code, cluster, year)
countries <- countries %>% filter(!is.na(pop))
countries <- countries %>% filter(year == 1990)
# Perform hierarchical clustering for 1990
hc_1990 <- hclust(dist(countries[, c("gdp_per_capita", "life")], method = "manhattan"), method = "complete")
clusters <- cutree(hc_1990, k = 3)
countries <- cbind(countries, cluster = clusters)
countries %>% filter(code == "USA") %>% select(cluster)
countries <- countries %>% filter(!is.na(pop))
countries <- countries %>% filter(!is.na(pop))
countries <- countries %>% filter(!is.na(pop))
countries <- countries %>% filter(!is.na(pop))
countries <- countries %>% filter(!is.na(pop))
rlang::last_trace()
countries <- countries[complete.cases(countries), ]
countries <- countries %>% filter(year == 1990)
rlang::last_trace()
countries <- countries %>% filter(year == 1990)
